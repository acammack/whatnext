#!/bin/bash

# Edit these to change where your tasks live
WN_CONFIG_DIRECTORY="$HOME/.whatnext"
WN_PROJECTS_DIRECTORY="$WN_CONFIG_DIRECTORY/projects"
WN_ACTIVE_DIRECTORY="$WN_CONFIG_DIRECTORY/active-tasks"
WN_CURRENT="$WN_CONFIG_DIRECTORY/current"

WN_EDITOR="${EDITOR:-nano}"

_whatnext_open() {
  [ -r "$1" ] && [ ! -d "$1" ] &&
    "$WN_EDITOR" "$1"
}

_whatnext_ls() {
  if [ -n "$(ls "$WN_ACTIVE_DIRECTORY")" ]; then
    ls -A "$WN_ACTIVE_DIRECTORY"/*;
  elif [ -n "$(ls "$WN_PROJECTS_DIRECTORY")" ]; then
    ls "$WN_PROJECTS_DIRECTORY"/*;
  fi
}

_whatnext_add() {
  [ -e "$2" ] && echo "That task already exists" 1>&2 && return 1
  mkdir -p "$1"
  touch "$2"
  _whatnext_open "$2"
}

_whatnext_dispatch() {
  local cmd project task path next postponed
  local project_dir task_f active_dir active_l

  # Name the parameters
  cmd="${1:-echo}"
  project="$2"
  task="$3"

  [ -h "$WN_CURRENT" ] &&
    path="$(readlink "$(readlink "$WN_CURRENT")")"

  project_dir="$WN_PROJECTS_DIRECTORY/$project"
  task_f="$project_dir/$task"

  active_dir="$WN_ACTIVE_DIRECTORY/$project"
  active_l="$active_dir/$task"

  case "$cmd" in
    add)
      _whatnext_add "$project_dir" "$task_f"
      ;;
    queue)
      [ -e "$task_f" ] ||
        _whatnext_add "$project_dir" "$task_f"
      mkdir -p "$active_dir"
      ln -nsf "$task_f" "$active_l"
      ;;
    start)
      [ -e "$active_l" ] || ( echo "That task is not in your queue" 1>&2 && return 1 )
      ln -nsf "$active_l" "$WN_CURRENT"
      _whatnext_open "$task_f"
      ;;
    finish)
      project="$(basename "$(dirname "$path")")"
      active_dir="$WN_ACTIVE_DIRECTORY/$project"

      _whatnext_open "$path"
      # Hide the underlying issue
      [ -e "$path" ] &&
        mv -n "$path" "$(dirname "$path")/.$(basename "$path")"

      # Remove it from the active list
      rm "$(readlink "$WN_CURRENT")"
      rm "$WN_CURRENT"

      # Remove the project from active if no tasks are left
      rmdir --ignore-fail-on-non-empty "$active_dir"

      # Print the remaining queued issues for the user to do
      # (Starting from the last project, if there are more)
      echo "What's next?" $'\n'
      if [ -d "$active_dir" ]; then
        echo "$(basename "$active_dir"):" $'\n'
        ls -A "$active_dir";
      else
        _whatnext_ls
      fi
      ;;
    open)
      if [ -n "$task" ]; then
        _whatnext_open "$task_f";
      else
        _whatnext_open "$path"
      fi
      ;;
    ls)
      _whatnext_ls
      ;;
    tree) # Requires tree to be installed, shows the whole state
      tree -a "$WN_CONFIG_DIRECTORY"
      ;;
    grep)
      shift 2 # Everything after the project name is fed to grep
      ls -A "$project_dir" | grep "$@" | xargs -I '{}' echo "$project_dir"/'{}'
      grep -R "$@" "$project_dir"
      ;;
    echo | *)
      if [ -r "$path" ]; then
        echo "$path"
        cat "$path";
      else
        echo "What's next?" $'\n'
        _whatnext_ls
      fi
  esac
}

if [ $(basename "$0") = "whatnext" ]; then
  set -e

  # Ensure directories
  mkdir -p "$WN_ACTIVE_DIRECTORY"
  mkdir -p "$WN_PROJECTS_DIRECTORY"
  
  _whatnext_dispatch "$@"
fi
